// <auto-generated />
using System;
using DownTimeAlerter.Data.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DownTimeAlerter.Data.Domain.Migrations
{
    [DbContext(typeof(DownTimeAlerterDbContext))]
    [Migration("20190922074454_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DownTimeAlerter.Data.Domain.Entities.Monitor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Interval");

                    b.Property<DateTime>("LastCheckDate");

                    b.Property<byte>("LastStatus");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Monitors");
                });

            modelBuilder.Entity("DownTimeAlerter.Data.Domain.Entities.MonitorRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsSuccess");

                    b.Property<Guid>("MonitorId");

                    b.Property<short>("ResponseCode");

                    b.Property<string>("ResponseMessage");

                    b.HasKey("Id");

                    b.HasIndex("MonitorId");

                    b.ToTable("MonitorRequests");
                });

            modelBuilder.Entity("DownTimeAlerter.Data.Domain.Entities.MonitorRequest", b =>
                {
                    b.HasOne("DownTimeAlerter.Data.Domain.Entities.Monitor")
                        .WithMany("MonitorRequests")
                        .HasForeignKey("MonitorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
